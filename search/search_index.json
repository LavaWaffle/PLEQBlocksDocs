{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the PL EQ Blocks Docs","text":""},{"location":"#welcome-to-the-pl-eq-blocks-docs","title":"Welcome to the PL EQ Blocks Docs","text":""},{"location":"#overview","title":"Overview","text":"<p>PrairieLearn Equation Blocks is a custom element for PrairieLearn that allows you to test users on mathematical equations.</p> <p>The project is a mix between pl-order-blocks and pl-symbolic-input. It takes the drag and drop, set in stone input approach of pl-order-blocks and combines it with the complex sympy evaluation of pl-symbolic-input. This allows for the best of both worlds! It gives students a starting point with a set of blocks to build equations with. Then, it enables students to give a variety of valid answers thanks to the power of sympy.</p> <p></p>"},{"location":"#how-to-install","title":"How to install","text":"<p>Copy the element code into your prairielearn elements directory. The code can be found here.</p>"},{"location":"#example-usage","title":"Example usage","text":"<p>Within your PrairieLearn Question, add the following code: </p>Quadratic Formula Example<pre><code>&lt;pl-eq-blocks\n  answers-name=\"pyth-formula\"\n  solution=\"A^2 + B^2 = C^2\"\n  variables=\"A, B, C\"\n  source-blocks-order=\"random\"\n  display-solution=\"$A^2 + B^2 = C^2$\"\n&gt;\n  &lt;pl-answer eval-as=\"A^2\"&gt;$A^2$&lt;/pl-answer&gt;\n  &lt;pl-answer eval-as=\"+\"&gt;$+$&lt;/pl-answer&gt;\n  &lt;pl-answer eval-as=\"-\"&gt;$-$&lt;/pl-answer&gt;\n  &lt;pl-answer eval-as=\"B^2\"&gt;$B^2$&lt;/pl-answer&gt;\n  &lt;pl-answer eval-as=\"C^2\"&gt;$C^2$&lt;/pl-answer&gt;\n  &lt;pl-answer eval-as=\"=\"&gt;$=$&lt;/pl-answer&gt;\n&lt;/pl-eq-blocks&gt;\n</code></pre>"},{"location":"attributes/","title":"PL EQ Blocks Attributes","text":""},{"location":"attributes/#pl-eq-blocks-attributes","title":"PL EQ Blocks Attributes","text":""},{"location":"attributes/#overview","title":"Overview","text":"<p>The following attributes are available for the PL EQ Blocks element.</p>"},{"location":"attributes/#answers-name","title":"<code>answers-name</code>","text":"<p>This parameter is required. It is a string type. It must be unique for each element within a PL question. (This is how data is stored in the database.)</p>"},{"location":"attributes/#solution","title":"<code>solution</code>","text":"<p>This parameter is required. It is a string type. It is the mathematical expression that sympy will compare the student's answer to. (Please do lots of testing to ensure that this solution is correct, or student's may have trouble using this element.) Any letters used here must also be used in the 'variables' parameter.</p>"},{"location":"attributes/#variables","title":"<code>variables</code>","text":"<p>This parameter is required. It is a comma separated list of the variables (any letters, not just variables) that will be used in the equation. Note these variables correspond to the variables used in the 'solution' parameter and in the 'eval-as' parameter within the individual answer blocks. The variables are case sensitive and must match in both places.</p>"},{"location":"attributes/#source-blocks-order","title":"<code>source-blocks-order</code>","text":"<p>This parameter is optional. It is assumed to be 'random' by default. </p> <p>If set to 'random', the blocks will be displayed in a random order. If set to 'ordered', the blocks will be displayed in the order they are listed in the 'answers' parameter.</p>"},{"location":"attributes/#display-solution","title":"<code>display-solution</code>","text":"<p>This parameter is required. This is the latex solution that will be displayed to the student when they correctly answer the question. This answer doesn't have to correspond to the solution parameter. You can use completely different variables and or symbols. This is encouraged as sympy prefers simple variables like A, B and so on while mathematical expressions use greek notation.</p> <p>We make it required because students need to be able to see one expected answer to the question. Thus, they know how the answer should be formatted idealy. Their answer can come in any format, so ideally we'd like to ensure that after answering the question, the student can see the answer as will be used in class.</p>"},{"location":"attributes/#children","title":"Children:","text":"<p>Every child must be a <code>&lt;pl-answer&gt;</code> element. They need to have the following attributes:</p>"},{"location":"attributes/#eval-as","title":"eval-as","text":"<p>This attribute is required. As stated above, this is a variable that will compare the student's answer to the solution. Any letters used here must also be used in the 'variables' parameter.</p>"},{"location":"attributes/#inner-html","title":"inner html","text":"<p>This attribute is technically optional (but highly recommended). This is the latex front end that will be displayed to the student when they answer the question. Again note how the front end and back end don't have to match. This is encouraged. Use mathematical latex notation on the front end and simple letters on the back end. </p>"},{"location":"issues/","title":"PL EQ Blocks Issues","text":""},{"location":"issues/#pl-eq-blocks-issues","title":"PL EQ Blocks Issues","text":"<p>Currently, we have only been working on this element for one semester via one main developer. There are likely to be issues with the element. For this reason, it's recommended that you use the element with caution. We don't recommend using this element for graded assignments. (Or just make this worth 0 pnts so students can experiment with it without being penalized.)</p>"},{"location":"issues/#front-end","title":"Front End","text":"<p>On the front end we haven't encountered any major issues. As in, currently we believe the front end works just as intended. The student can see their answer, edit it via drag and drop or keyboard and the answer is correctly sent to the server. (Additionally, the student's answer is also correctly saved)</p>"},{"location":"issues/#back-end","title":"Back End","text":"<p>On the back end, we have a few known issues. We use pytest to test the solution checker against the following 40 test cases. Note we plan to add more in the future.</p> <p>Out of those 40 test cases, we have 4 that are currently failing.</p>"},{"location":"issues/#square-root-failing-test-cases","title":"Square Root Failing Test Cases","text":"<p>These fail due to that our solution checker not being able to properly handle sqrts. We recommend that you don't use roots in your solution.  </p>Sqrt Failling Test Case #1<pre><code>{\n    \"student\": \"a^2 + b^2 = c^2\",\n    \"solution\": \"abs(c) = (a^2 + b^2)^(1/2)\", \n    \"expected\": True, \n    \"variables\": [\"a\", \"b\", \"c\"],\n}\n</code></pre> Sqrt Failling Test Case #2<pre><code>{\n    \"student\": \"ax^2 + bx + c = 0\",\n    \"solution\": \"x = (-b + (b^2 - 4ac)^(1/2))/(2a)\",\n    \"expected\": False,\n    \"variables\": [\"a\", \"b\", \"c\", \"x\"],\n}\n</code></pre> Sqrt Failling Test Case #3<pre><code>{\n    \"student\": \"(x - h)^2 + (y - k)^2 = r^2\",\n    \"solution\": \"x^2 + y^2 - 2hx - 2ky + h^2 + k^2 - r^2 = 0\",\n    \"expected\": True,\n    \"variables\": [\"x\", \"y\", \"h\", \"k\", \"r\"],\n}\n</code></pre>"},{"location":"issues/#complex-numbers-failing-test-case","title":"Complex Numbers Failing Test Case","text":"<p>Re and Im functions are not currently supported. Instead we recommend you just a variable to replace the the imaginary part. Ex make the variable 'I' for your back end and use 'i' in your front end.</p> Complex Numbers Failling Test Case<pre><code>{\n    \"student\": \"z = x + iy\",\n    \"solution\": \"x = Re(z), y = Im(z)\",\n    \"expected\": False,\n    \"variables\": [\"x\", \"y\", \"z\", \"i\"],\n}\n</code></pre>"}]}